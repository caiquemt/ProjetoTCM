<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zbgu1fzy5f8BHnwPToMDBq8AAAAASUVORK5CYII=
</value>
  </data>
</root>